---
- hosts: localhost
  vars:
    command_out:
      stdout_lines:
        - 'first      second'
        - '29494060   23004496'
        - '29774383   22979864'
      stdout: |-
        first      second
        29494060   23004496
        29774383   22979864
  tasks:
    - set_fact:
        keys: "{{ command_out.stdout_lines[0].split() }}"
      tags: t1
    - debug:
        var: keys
      tags: t1
          
    - set_fact:
        sql_list: "{{ sql_list|default([]) +
                      [dict(keys|zip(item.split()))] }}"
      loop: "{{ command_out.stdout_lines[1:] }}"
      tags: t1
    - debug:
        var: sql_list
      tags: t1

    - set_fact:
        sql_lines: "{{ command_out.stdout.splitlines() }}"
      tags: t2
    - set_fact:
        keys: "{{ sql_lines[0].split() }}"
      tags: t2
    - debug:
        var: keys
      tags: t2
          
    - set_fact:
        sql_list: "{{ sql_list|default([]) +
                      [dict(keys|zip(item.split()))] }}"
      loop: "{{ sql_lines[1:] }}"
      tags: t2
    - debug:
        var: sql_list
      tags: t2

# How do I extract values from a width delimited table in Ansible?
# https://stackoverflow.com/questions/59351567/how-do-i-extract-values-from-a-width-delimited-table-in-ansible/

# Create keys. For example
# 
# - set_fact:
#     keys: "{{ command_out.stdout_lines[0].split() }}"
# - debug:
#     var: keys
# gives
# 
# "keys": [
#     "first", 
#     "second"
# ]
# 
# then add the dictionaries, created by the filters dict and zip, to the
# list sql_list
# 
# - set_fact:
#     sql_list: "{{ sql_list|default([]) +
#                   [dict(keys|zip(item.split()))] }}"
#   loop: "{{ command_out.stdout_lines[1:] }}"
# - debug:
#     var: sql_list
# 
# gives
# 
# "sql_list": [
#     {
#         "first": "29494060", 
#         "second": "23004496"
#     }, 
#     {
#         "first": "29774383", 
#         "second": "22979864"
#     }
# ]

# EOF
