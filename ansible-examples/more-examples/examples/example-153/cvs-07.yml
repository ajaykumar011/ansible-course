---
- hosts: localhost
  gather_facts: false
  vars:
    command_out:
      stdout_lines:
        - 'first      second'
        - '29494060   23004496'
        - '29774383   22979864'
  tasks:
    - set_fact:
        keys: "{{ command_out.stdout_lines[0]|string_split }}"
    - debug:
        var: keys
    - set_fact:
        sql_list: "{{ command_out.stdout_lines[1:]|
                      map('string_split')|
                      map('list_dict_zip_rev', keys)|
                      list }}"
    - debug:
        var: sql_list


# How do I extract values from a width delimited table in Ansible?
# https://stackoverflow.com/questions/59351567/how-do-i-extract-values-from-a-width-delimited-table-in-ansible/

# The task simplified by custom plugins gives the same result
# 
# - set_fact:
#     sql_list: "{{ command_out.stdout_lines[1:]|
#                   map('string_split')|
#                   map('list_dict_zip_rev', keys)|
#                   list }}"
# 
# $ cat filter_plugins/string_filters.py
# def string_split(s, *i):
#     if len(i) == 0:
#         return s.split()
#     elif len(i) == 1:
#         return s.split(i[0])
#     else:
#         return s.split(i[0], i[1])
# 
# def list_dict_zip_rev(l,k):
#     return dict((y,x) for x,y in  zip(l,k))
# 
# class FilterModule(object):
#     ''' Ansible filters.'''
# 
#     def filters(self):
#         return {
#             'list_dict_zip_rev' : list_dict_zip_rev,
#             'string_split' : string_split
#         }
